import React, { useState, useEffect } from "react";
import { useLocation, useNavigate } from "react-router-dom";
import "../styles.css";

function SearchResults() {
  const [plantInfo, setPlantInfo] = useState(null);
  const [affiliateOffers, setAffiliateOffers] = useState([]);
  const [imageBase64, setImageBase64] = useState(null);
  const [loading, setLoading] = useState(true); // ‡πÄ‡∏û‡∏¥‡πà‡∏° state loading
  const location = useLocation();
  const navigate = useNavigate();
  const searchParams = new URLSearchParams(location.search);
  const plantName = searchParams.get("name");

  const API_URL = import.meta.env.VITE_API_URL || "http://localhost:8000";

  useEffect(() => {
    const fetchPlantInfo = async () => {
      setLoading(true); // ‡πÄ‡∏£‡∏¥‡πà‡∏°‡πÇ‡∏´‡∏•‡∏î
      if (!plantName) {
        setPlantInfo({
          name: "‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏Å‡∏£‡∏≠‡∏Å‡∏ä‡∏∑‡πà‡∏≠‡∏ï‡πâ‡∏ô‡πÑ‡∏°‡πâ",
          price: "‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•",
          description: "‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•",
          careInstructions: "‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•",
          gardenIdeas: "‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•",
          affiliateLink: "https://shopee.co.th/plant-link",
        });
        setAffiliateOffers([]);
        setImageBase64(null);
        setLoading(false); // ‡∏´‡∏¢‡∏∏‡∏î‡πÇ‡∏´‡∏•‡∏î‡∏ñ‡πâ‡∏≤‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏ä‡∏∑‡πà‡∏≠
        return;
      }
      const encodedPlantName = encodeURIComponent(plantName);
      try {
        const response = await fetch(
          `${API_URL}/identify/?name=${encodedPlantName}`,
          {
            mode: "cors",
            credentials: "include",
          }
        );
        if (!response.ok)
          throw new Error(`HTTP error! status: ${response.status}`);
        const data = await response.json();
        setPlantInfo(
          data.plant_info || {
            name: "‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•",
            price: "‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•",
            description: "‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•",
            careInstructions: "‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•",
            gardenIdeas: "‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•",
            affiliateLink: "https://shopee.co.th/plant-link",
          }
        );
        setAffiliateOffers(data.affiliate_offers || []);
        setImageBase64(data.image_base64);
      } catch (error) {
        console.error("Error fetching plant info:", error);
        setPlantInfo({
          name: "‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏£‡∏∞‡∏ö‡∏∏‡πÑ‡∏î‡πâ",
          price: "‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•",
          description: "‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•",
          careInstructions: "‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•",
          gardenIdeas: "‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•",
          affiliateLink: "https://shopee.co.th/plant-link",
        });
        setAffiliateOffers([]);
        setImageBase64(null);
      } finally {
        setLoading(false); // ‡∏´‡∏¢‡∏∏‡∏î‡πÇ‡∏´‡∏•‡∏î‡πÑ‡∏°‡πà‡∏ß‡πà‡∏≤‡∏ú‡∏•‡∏à‡∏∞‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à‡∏´‡∏£‡∏∑‡∏≠‡∏•‡πâ‡∏°‡πÄ‡∏´‡∏•‡∏ß
      }
    };

    fetchPlantInfo();
  }, [plantName, API_URL]);

  const handleShare = () => {
    if (navigator.share) {
      navigator
        .share({
          title: `‡∏û‡∏ö‡∏ï‡πâ‡∏ô‡πÑ‡∏°‡πâ: ${plantInfo?.name}`,
          text: `‡∏°‡∏≤‡∏î‡∏π‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ï‡πâ‡∏ô‡πÑ‡∏°‡πâ ${plantInfo?.name} ‡∏Å‡∏±‡∏ô!`,
          url: window.location.href,
        })
        .catch((error) => console.error("Error sharing:", error));
    } else {
      alert("‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÅ‡∏ä‡∏£‡πå‡πÑ‡∏°‡πà‡∏£‡∏≠‡∏á‡∏£‡∏±‡∏ö‡πÉ‡∏ô‡πÄ‡∏ö‡∏£‡∏≤‡∏ß‡πå‡πÄ‡∏ã‡∏≠‡∏£‡πå‡∏ô‡∏µ‡πâ");
    }
  };

  if (loading) {
    return (
      <div className="loading-spinner">
        <div className="spinner"></div>
        <p>‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•...</p>
      </div>
    ); // ‡πÅ‡∏™‡∏î‡∏á spinner ‡∏Ç‡∏ì‡∏∞‡πÇ‡∏´‡∏•‡∏î
  }

  if (!plantInfo) return <div>‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ï‡πâ‡∏ô‡πÑ‡∏°‡πâ</div>;

  // ‡πÄ‡∏£‡∏µ‡∏¢‡∏á‡∏•‡∏≥‡∏î‡∏±‡∏ö affiliateOffers ‡∏à‡∏≤‡∏Å‡∏£‡∏≤‡∏Ñ‡∏≤‡∏ñ‡∏π‡∏Å‡∏™‡∏∏‡∏î‡πÑ‡∏õ‡πÅ‡∏û‡∏á‡∏™‡∏∏‡∏î (‡∏à‡∏≥‡∏Å‡∏±‡∏î 5 ‡∏≠‡∏±‡∏ô‡∏î‡∏±‡∏ö‡πÅ‡∏£‡∏Å)
  const sortedOffers = [...affiliateOffers]
    .sort((a, b) => parseFloat(a.price) - parseFloat(b.price))
    .slice(0, 5);

  return (
    <div className="home">
      <div className="home-container">
        {/* ‡∏™‡πà‡∏ß‡∏ô‡∏ó‡∏µ‡πà 1: ‡∏™‡∏£‡∏∏‡∏õ‡∏ï‡πâ‡∏ô‡πÑ‡∏°‡πâ‡∏´‡∏•‡∏±‡∏Å */}
        <div className="category-section plant-main">
          <h3 className="category-title">
            <span className="category-icon">üå±</span> {plantInfo.name}
          </h3>
          <div className="plant-card">
            {imageBase64 && (
              <img
                src={`data:image/jpeg;base64,${imageBase64}`}
                alt="Plant"
                className="plant-image"
              />
            )}
            <div className="plant-info">
              <h4 className="plant-price">‡∏£‡∏≤‡∏Ñ‡∏≤: {plantInfo.price}</h4>
              <p className="plant-description">
                <strong>‡∏•‡∏±‡∏Å‡∏©‡∏ì‡∏∞:</strong> {plantInfo.description}
              </p>
              <p className="plant-description">
                <strong>‡∏ß‡∏¥‡∏ò‡∏µ‡∏î‡∏π‡πÅ‡∏•:</strong> {plantInfo.careInstructions}
              </p>
              <p className="plant-description">
                <strong>‡πÑ‡∏≠‡πÄ‡∏î‡∏µ‡∏¢‡∏à‡∏±‡∏î‡∏™‡∏ß‡∏ô:</strong> {plantInfo.gardenIdeas}
              </p>
            </div>
          </div>
        </div>

        {/* ‡∏™‡πà‡∏ß‡∏ô‡∏ó‡∏µ‡πà 2: ‡πÄ‡∏õ‡∏£‡∏µ‡∏¢‡∏ö‡πÄ‡∏ó‡∏µ‡∏¢‡∏ö‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤ (Affiliate Offers) */}
        {sortedOffers.length > 0 && (
          <div className="category-section affiliate-offers">
            <h3 className="category-title">
              <span className="category-icon">üìä</span> ‡πÄ‡∏õ‡∏£‡∏µ‡∏¢‡∏ö‡πÄ‡∏ó‡∏µ‡∏¢‡∏ö‡∏î‡∏µ‡∏•
            </h3>
            <div className="offers-grid">
              {sortedOffers.map((offer, index) => (
                <div
                  key={index}
                  className={`offer-card ${index === 0 ? "best-deal" : ""}`}
                >
                  <h4 className="offer-price">{offer.price}</h4>
                  <p className="offer-shop">
                    {offer.shopName || "Shopee Store"}
                  </p>
                  <a
                    href={offer.offerLink}
                    target="_blank"
                    rel="noopener noreferrer"
                    className="offer-button"
                  >
                    ‡∏î‡∏π‡∏î‡∏µ‡∏•
                  </a>
                </div>
              ))}
            </div>
          </div>
        )}

        {/* ‡∏™‡πà‡∏ß‡∏ô‡∏ó‡∏µ‡πà 3: ‡πÄ‡∏™‡∏£‡∏¥‡∏° (Optional) */}
        <div className="category-section actions">
          <button className="action-button share-button" onClick={handleShare}>
            ‡πÅ‡∏ä‡∏£‡πå
          </button>
          <button
            className="action-button search-again-button"
            onClick={() => navigate("/identify-result")}
          >
            ‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡∏î‡πâ‡∏ß‡∏¢‡∏£‡∏π‡∏õ
          </button>
        </div>
      </div>
    </div>
  );
}

export default SearchResults;
